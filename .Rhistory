mean_of_each_group(Hotel_Dataset, "City", Hotel_Dataset$Vacancy_rooms)
mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
#' mean_of_each_group function
#'
#' This function can be used to output the mean value of each group
#'
#' @param data is the dataset
#' @param x is the column that wanted to be grouped
#' @param y is the variable that we need to find the mean value
#' @return the mean value of the grouped variable
#'
mean_of_each_group <- function(data, x, y) {
data %>%
drop_na(y) %>%
group_by(across(all_of(x))) %>%
summarise(mean_run = mean(all_of(y)))
}
mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
mean_of_each_group(Hotel_Dataset, "City", Vacancy_rooms)
mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
#' mean_of_each_group function
#'
#' This function can be used to output the mean value of each group
#'
#' @param data is the dataset
#' @param x is the column that wanted to be grouped
#' @param y is the variable that we need to find the mean value
#' @return the mean value of the grouped variable
#'
mean_of_each_group <- function(data, x, y) {
data %>%
drop_na(y) %>%
group_by(across(all_of(x))) %>%
summarise(across(where(is.numeric), mean))
}
mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
#' @title mean_of_each_group function
#'
#' This function can be used to output the mean value of each group
#'
#' @param data is the dataset
#' @param x is the column that wanted to be grouped
#' @param y is the variable that we need to find the mean value
#' @return the mean value of the grouped variable
#'
mean_of_each_group <- function(data, x, y) {
data %>%
drop_na(y) %>%
group_by(across(all_of(x))) %>%
summarise(across(where(is.numeric), max))
}
mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
#' @title mean_of_each_group function
#'
#' This function can be used to output the mean value of each group
#'
#' @param data is the dataset
#' @param x is the column that wanted to be grouped
#' @param y is the variable that we need to find the mean value
#' @return the mean value of the grouped variable
#'
mean_of_each_group <- function(data, x, y) {
data %>%
drop_na(y) %>%
group_by(across(all_of(x))) %>%
summarise(across(where(is.numeric), mean))
}
mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
#' @title mean_of_each_group function
#'
#' @description
#' This function can be used to output the mean value of each group
#'
#' @param data is the dataset
#' @param x is the column that wanted to be grouped
#' @param y is the variable that we need to find the mean value
#' @return the mean value of the grouped variable
#'
mean_of_each_group <- function(data, x, y) {
data %>%
drop_na(y) %>%
group_by(across(all_of(x))) %>%
summarise(across(where(is.numeric), mean))
}
Hotel_Dataset <- data.frame(
City = c("Vancouver", "Vancouver", "Vancouver", "Ames", "Ames", "Taipei"),
Location = c("Richmond", "Downtown", "Marine Drive", "Boulvard", "ISU", "Dehui"),
Vacancy_rooms = c(10, 5, 20, 2, 100, 50),
Price = c(200, 100, 250, 180, 200, 250)
)
mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
#' @title mean_of_each_group function
#'
#' @description
#' This function can be used to output the mean value of each group
#'
#' @param data is the dataset
#' @param x is the column that wanted to be grouped
#' @param y is the variable that we need to find the mean value
#' @return the mean value of the grouped variable
#'
mean_of_each_group <- function(data, x, y) {
data %>%
drop_na(y) %>%
group_by(across(all_of(x))) %>%
summarise(across(y, mean))
}
mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
mean_of_each_group(Hotel_Dataset, "City", "Price")
correct <- data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Price = c(51.00000, 50.00000, 11.66667)
)
test_that("Test 1:", {
expect_equal(mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms"), correct)
})
correct <- data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Price = c(51.00000, 50.00000, 11.66667)
)
test_that("Test 1:", {
expect_equal(mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms"), correct)
})
correct <- data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Vacancy_rooms = c(51.00000, 50.00000, 11.66667)
)
test_that("Test 1:", {
expect_equal(mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms"), correct)
})
correct <- data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Vacancy_rooms = c(51.00000, 50.00000, 11.66667)
)
correct
mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
test_that("Test 1:", {
expect_equal(mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms"), correct)
})
correct <- data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Vacancy_rooms = c(51.00000, 50.00000, 11.66667)
)
correct
result <- mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
test_that("Test 1:", {
expect_equal(result, correct)
})
correct <- data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Vacancy_rooms = c(51.00000, 50.00000, 11.66667)
)
correct
mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
test_that("Test 1:", {
expect_equal(result, correct)
})
correct <- data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Vacancy_rooms = c(51.00000, 50.00000, 11.66667)
)
correct
as.data.frame(mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms"))
test_that("Test 1:", {
expect_equal(result, correct)
})
View(result)
correct <- data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Vacancy_rooms = c(51.00000, 50.00000, 11.66667)
)
correct
result <- as.data.frame(mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms"))
test_that("Test 1:", {
expect_equal(result, correct)
})
correct <- data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Vacancy_rooms = c(51.00000, 50.00000, 11.66667)
)
correct
result <- round(as.data.frame(mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")), 5)
correct <- data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Vacancy_rooms = c(51.00000, 50.00000, 11.66667)
)
correct
result <- as.data.frame(mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms"))
select(correct, Vacancy_rooms)
test_that("Test 1:", {
expect_equal(result, correct)
})
correct <- data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Vacancy_rooms = c(51.00000, 50.00000, 11.66667)
)
result <- as.data.frame(mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms"))
select(correct, Vacancy_rooms)
select(result, Vacancy_rooms)
test_that("Test 1:", {
expect_equal(result, correct)
})
correct <- data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Vacancy_rooms = c(51.00000, 50.00000, 11.66667)
)
result <- as.data.frame(mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms"))
s1 <- select(correct, Vacancy_rooms)
s2 <- select(result, Vacancy_rooms)
test_that("Test 1:", {
expect_equal(result, correct)
})
correct <- data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Vacancy_rooms = c(51.00000, 50.00000, 11.66667)
)
result <- as.data.frame(mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms"))
s1 <- round(select(correct, Vacancy_rooms), 3)
s2 <- round(select(result, Vacancy_rooms), 3)
test_that("Test 1:", {
expect_equal(s1, s2)
})
correct <- data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Vacancy_rooms = c(51.00000, 50.00000, 11.66667)
)
result <- as.data.frame(mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms"))
rooms1 <- round(select(correct, Vacancy_rooms), 3)
rooms2 <- round(select(result, Vacancy_rooms), 3)
city1 <- select(correct, City)
city2 <- select(result, City)
test_that("Test 1:", {
expect_equal(s1, s2)
expect_equal(city1, city2)
})
result <- mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
test <- is.na(result)
test_that("Test 2:", {
expect_equal(test, TRUE)
})
result <- mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
result
test <- is.na(result)
test_that("Test 2:", {
expect_equal(test, TRUE)
})
result <- mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
test <- is.na(result)
test
test_that("Test 2:", {
expect_equal(test, TRUE)
})
output <- mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
average_vacancy_rooms <- select(result, Vacancy_rooms)
test <- is.na(average_vacancy_rooms)
test
test_that("Test 2:", {
expect_equal(test, TRUE)
})
output <- mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
average_vacancy_rooms <- select(result, Vacancy_rooms)
test <- is.na(average_vacancy_rooms)
expected <- c(FALSE, FALSE, FALSE)
test_that("Test 2:", {
expect_equal(test, expected)
})
output <- mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
average_vacancy_rooms <- select(result, Vacancy_rooms)
test <- is.na(average_vacancy_rooms)
expected <- c(FALSE, FALSE, FALSE)
test
expected
test_that("Test 2:", {
expect_equal(test, expected)
})
output <- mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
average_vacancy_rooms <- select(result, Vacancy_rooms)
test <- is.na(average_vacancy_rooms)
expected <- c(FALSE, FALSE, FALSE)
test
expected
paste(test,collapse=" ")
paste(expected,collapse=" ")
test_that("Test 2:", {
expect_equal(test, expected)
})
output <- mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
average_vacancy_rooms <- select(result, Vacancy_rooms)
test <- paste(is.na(average_vacancy_rooms),collapse=" ")
expected <- paste(c(FALSE, FALSE, FALSE),collapse=" ")
test_that("Test 2:", {
expect_equal(test, expected)
})
mean_of_each_group(numeric(0), Hotel_Dataset, "City", "Vacancy_rooms")
mean_of_each_group(numeric(0), "City", "Vacancy_rooms")
mean_of_each_group(numeric(1), "City", "Vacancy_rooms")
mean_of_each_group(numeric(1), "City", "Vacancy_rooms")
mean_of_each_group(numeric(0), "City", "Vacancy_rooms")
#' @title mean_of_each_group function
#'
#' @description
#' This function can be used to output the mean value of each group
#'
#' @param data is the dataset
#' @param x is the column that wanted to be grouped
#' @param y is the variable that we need to find the mean value
#' @return the mean value of the grouped variable
#'
mean_of_each_group <- function(data, x, y) {
data %>%
group_by(across(all_of(x))) %>%
summarise(across(y, mean))
}
Hotel_Dataset <- data.frame(
City = c("Vancouver", "Vancouver", "Vancouver", "Ames", "Ames", "Taipei"),
Location = c("Richmond", "Downtown", "Marine Drive", "Boulvard", "ISU", "Dehui"),
Vacancy_rooms = c(10, 5, 20, 2, 100, 50),
Price = c(200, 100, 250, 180, 200, 250)
)
mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
mean_of_each_group(Hotel_Dataset, "City", "Price")
mean_of_each_group(Hotel_Dataset, "City", "Price")
mean_of_each_group(Hotel_Dataset, "City", "Price")
correct <- data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Vacancy_rooms = c(51.00000, 50.00000, 11.66667)
)
result <- as.data.frame(mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms"))
rooms1 <- round(select(correct, Vacancy_rooms), 3)
rooms2 <- round(select(result, Vacancy_rooms), 3)
city1 <- select(correct, City)
city2 <- select(result, City)
test_that("Test 1:", {
expect_equal(s1, s2)
expect_equal(city1, city2)
})
output <- mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
average_vacancy_rooms <- select(result, Vacancy_rooms)
test <- paste(is.na(average_vacancy_rooms),collapse=" ")
expected <- paste(c(FALSE, FALSE, FALSE),collapse=" ")
test_that("Test 2:", {
expect_equal(test, expected)
})
mean_of_each_group(numeric(0), "City", "Vacancy_rooms")
#' @title mean_of_each_group function
#'
#' @description
#' This function can be used to output the mean value of each group
#'
#' @param data is the dataset
#' @param x is the column that wanted to be grouped
#' @param y is the variable that we need to find the mean value
#' @return the mean value of the grouped variable
#'
mean_of_each_group <- function(data, x, y) {
data %>%
group_by({{x}}) %>%
summarise(across(y, mean))
}
Hotel_Dataset <- data.frame(
City = c("Vancouver", "Vancouver", "Vancouver", "Ames", "Ames", "Taipei"),
Location = c("Richmond", "Downtown", "Marine Drive", "Boulvard", "ISU", "Dehui"),
Vacancy_rooms = c(10, 5, 20, 2, 100, 50),
Price = c(200, 100, 250, 180, 200, 250)
)
mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
#' @title mean_of_each_group function
#'
#' @description
#' This function can be used to output the mean value of each group
#'
#' @param data is the dataset
#' @param x is the column that wanted to be grouped
#' @param y is the variable that we need to find the mean value
#' @return the mean value of the grouped variable
#'
mean_of_each_group <- function(data, x, y) {
data %>%
group_by(across(all_of(x))) %>%
summarise(across(y, mean))
}
Hotel_Dataset <- data.frame(
City = c("Vancouver", "Vancouver", "Vancouver", "Ames", "Ames", "Taipei"),
Location = c("Richmond", "Downtown", "Marine Drive", "Boulvard", "ISU", "Dehui"),
Vacancy_rooms = c(10, 5, 20, 2, 100, 50),
Price = c(200, 100, 250, 180, 200, 250)
)
mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
mean_of_each_group(numeric(0), "City", "Vacancy_rooms")
mean_of_each_group(numeric(1), "City", "Vacancy_rooms")
res <- mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
expect_equal(is_tibble(res), TRUE)
res <- mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
test_that("Test 3:", {
expect_equal(is_tibble(res), TRUE)
})
correct <- data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Vacancy_rooms = c(51.00000, 50.00000, 11.66667)
)
result <- as.data.frame(mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms"))
rooms1 <- round(select(correct, Vacancy_rooms), 3)
rooms2 <- round(select(result, Vacancy_rooms), 3)
city1 <- select(correct, City)
city2 <- select(result, City)
test_that("Test 1:", {
expect_equal(s1, s2)
expect_equal(city1, city2)
})
output <- mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
average_vacancy_rooms <- select(result, Vacancy_rooms)
test <- paste(is.na(average_vacancy_rooms),collapse=" ")
expected <- paste(c(FALSE, FALSE, FALSE),collapse=" ")
test_that("Test 2:", {
expect_equal(test, expected)
})
res <- mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")
test_that("Test 3:", {
expect_equal(is_tibble(res), TRUE)
})
correct <- data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Vacancy_rooms = c(51.00000, 50.00000, 11.66667)
)
result <- as.data.frame(mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms"))
rooms1 <- round(select(correct, Vacancy_rooms), 3)
rooms2 <- round(select(result, Vacancy_rooms), 3)
city1 <- select(correct, City)
city2 <- select(result, City)
test_that("Test 1:", {
expect_equal(s1, s2)
expect_equal(city1, city2)
})
correct <- data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Vacancy_rooms = c(51.00000, 50.00000, 11.66667)
)
result <- as.data.frame(mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms"))
rooms1 <- round(select(correct, Vacancy_rooms), 3)
rooms2 <- round(select(result, Vacancy_rooms), 3)
city1 <- select(correct, City)
city2 <- select(result, City)
test_that("Test 1:", {
expect_equal(s1, s2)
expect_equal(city1, city2)
})
correct <- data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Vacancy_rooms = c(51.00000, 50.00000, 11.66667)
)
result <- as.data.frame(mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms"))
rooms1 <- round(select(correct, Vacancy_rooms), 3)
rooms2 <- round(select(result, Vacancy_rooms), 3)
city1 <- select(correct, City)
city2 <- select(result, City)
test_that("Test 1:", {
expect_equal(s1, s2)
expect_equal(city1, city2)
})
correct <- as.tibble(data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Vacancy_rooms = c(51.00000, 50.00000, 11.66667)
))
result <- as.data.frame(mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms"))
rooms1 <- round(select(correct, Vacancy_rooms), 3)
rooms2 <- round(select(result, Vacancy_rooms), 3)
city1 <- select(correct, City)
city2 <- select(result, City)
test_that("Test 1:", {
expect_equal(s1, s2)
expect_equal(city1, city2)
})
correct <- as_tibble(data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Vacancy_rooms = c(51.00000, 50.00000, 11.66667)
))
result <- as.data.frame(mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms"))
rooms1 <- round(select(correct, Vacancy_rooms), 3)
rooms2 <- round(select(result, Vacancy_rooms), 3)
city1 <- select(correct, City)
city2 <- select(result, City)
test_that("Test 1:", {
expect_equal(s1, s2)
expect_equal(city1, city2)
})
correct <- as_tibble(data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Vacancy_rooms = c(51.00000, 50.00000, 11.66667)
))
result <- as_tibble(data.frame(mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")))
rooms1 <- round(select(correct, Vacancy_rooms), 3)
rooms2 <- round(select(result, Vacancy_rooms), 3)
city1 <- select(correct, City)
city2 <- select(result, City)
test_that("Test 1:", {
expect_equal(s1, s2)
expect_equal(city1, city2)
})
correct <- as_tibble(data.frame(
City = c("Ames", "Taipei", "Vancouver"),
Vacancy_rooms = c(51.00000, 50.00000, 11.66667)
))
result <- as_tibble(data.frame(mean_of_each_group(Hotel_Dataset, "City", "Vacancy_rooms")))
rooms1 <- round(select(correct, Vacancy_rooms), 3)
rooms2 <- round(select(result, Vacancy_rooms), 3)
city1 <- select(correct, City)
city2 <- select(result, City)
test_that("Test 1:", {
expect_equal(s1, s2)
expect_equal(city1, city2)
})
unlink("Assignment_B-1_cache", recursive = TRUE)
